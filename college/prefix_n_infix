#include <iostream>

using namespace std;

struct Node
{

    char data;
    Node *next;
};

Node *characters = nullptr;
Node *ops = nullptr;
void push(char x, Node **top)
{
    Node *t = new Node();
    t->data = x;
    t->next = nullptr;

    if(top == nullptr)
    {
        top = &t;
        return;   
    }
        cout << x << endl;

    t->next = *top;
    top = &t;
}

void readPile(Node *ref)
{
    Node *tmp = ref;
    while (tmp != nullptr)
    {
        cout << tmp->data << endl;
    }
}

char pop(Node *top)
{
    Node *t;
    char x = -1;
    if (top == nullptr)
    {
        cout << "Stack is Empty" << endl;
    }
    else
    {
        t = top;
        top = top->next;
        x = t->data;
        delete t;
    }
    return x;
}

void stackInfix(string str)
{
    for (int i = 0; i < str.length(); i++)
    {
        if (str[i] == '(' || str[i] == ')' || str[i] == '+' || str[i] == '-' || str[i] == '*' || str[i] == '/')
        {
            cout << str[i] << endl;
            push(str[i], &ops);
            return;
        }
        else
        {

            push(str[i], &characters);
            return;
        }
    }
}

int main(void)
{
    stackInfix("(hailmary)-+");
    // readPile(ops);
}